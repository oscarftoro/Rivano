module FolPar
// Implementation file for parser generated by fsyacc
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"

 (* File Fun/FunPar.fsy 
    Parser for a tiny First Order Logic Language;
    oscarftoro at protonmail dot com * 2016-02-06
  *)

 open Dk.Nqn.Fol;

# 14 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EXISTS
  | LSQBR
  | RSQBR
  | COMMA
  | EOF
  | LPAR
  | RPAR
  | QUOT
  | IMPL
  | FORALL
  | PERIOD
  | OR
  | AND
  | EQ
  | ATOM
  | PLUS
  | MINUS
  | MUL
  | LT
  | LET
  | IN
  | END
  | FALSE
  | NOT
  | TRUE
  | VAL
  | GRT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTBOOL of (bool)
  | CSTDOUBLE of (double)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EXISTS
    | TOKEN_LSQBR
    | TOKEN_RSQBR
    | TOKEN_COMMA
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_QUOT
    | TOKEN_IMPL
    | TOKEN_FORALL
    | TOKEN_PERIOD
    | TOKEN_OR
    | TOKEN_AND
    | TOKEN_EQ
    | TOKEN_ATOM
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_MUL
    | TOKEN_LT
    | TOKEN_LET
    | TOKEN_IN
    | TOKEN_END
    | TOKEN_FALSE
    | TOKEN_NOT
    | TOKEN_TRUE
    | TOKEN_VAL
    | TOKEN_GRT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTBOOL
    | TOKEN_CSTDOUBLE
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Expr
    | NONTERM_AtExpr
    | NONTERM_List
    | NONTERM_Const

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EXISTS  -> 0 
  | LSQBR  -> 1 
  | RSQBR  -> 2 
  | COMMA  -> 3 
  | EOF  -> 4 
  | LPAR  -> 5 
  | RPAR  -> 6 
  | QUOT  -> 7 
  | IMPL  -> 8 
  | FORALL  -> 9 
  | PERIOD  -> 10 
  | OR  -> 11 
  | AND  -> 12 
  | EQ  -> 13 
  | ATOM  -> 14 
  | PLUS  -> 15 
  | MINUS  -> 16 
  | MUL  -> 17 
  | LT  -> 18 
  | LET  -> 19 
  | IN  -> 20 
  | END  -> 21 
  | FALSE  -> 22 
  | NOT  -> 23 
  | TRUE  -> 24 
  | VAL  -> 25 
  | GRT  -> 26 
  | CSTSTRING _ -> 27 
  | NAME _ -> 28 
  | CSTBOOL _ -> 29 
  | CSTDOUBLE _ -> 30 
  | CSTINT _ -> 31 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EXISTS 
  | 1 -> TOKEN_LSQBR 
  | 2 -> TOKEN_RSQBR 
  | 3 -> TOKEN_COMMA 
  | 4 -> TOKEN_EOF 
  | 5 -> TOKEN_LPAR 
  | 6 -> TOKEN_RPAR 
  | 7 -> TOKEN_QUOT 
  | 8 -> TOKEN_IMPL 
  | 9 -> TOKEN_FORALL 
  | 10 -> TOKEN_PERIOD 
  | 11 -> TOKEN_OR 
  | 12 -> TOKEN_AND 
  | 13 -> TOKEN_EQ 
  | 14 -> TOKEN_ATOM 
  | 15 -> TOKEN_PLUS 
  | 16 -> TOKEN_MINUS 
  | 17 -> TOKEN_MUL 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_LET 
  | 20 -> TOKEN_IN 
  | 21 -> TOKEN_END 
  | 22 -> TOKEN_FALSE 
  | 23 -> TOKEN_NOT 
  | 24 -> TOKEN_TRUE 
  | 25 -> TOKEN_VAL 
  | 26 -> TOKEN_GRT 
  | 27 -> TOKEN_CSTSTRING 
  | 28 -> TOKEN_NAME 
  | 29 -> TOKEN_CSTBOOL 
  | 30 -> TOKEN_CSTDOUBLE 
  | 31 -> TOKEN_CSTINT 
  | 34 -> TOKEN_end_of_input
  | 32 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Expr 
    | 3 -> NONTERM_Expr 
    | 4 -> NONTERM_Expr 
    | 5 -> NONTERM_Expr 
    | 6 -> NONTERM_Expr 
    | 7 -> NONTERM_Expr 
    | 8 -> NONTERM_Expr 
    | 9 -> NONTERM_Expr 
    | 10 -> NONTERM_Expr 
    | 11 -> NONTERM_Expr 
    | 12 -> NONTERM_Expr 
    | 13 -> NONTERM_AtExpr 
    | 14 -> NONTERM_AtExpr 
    | 15 -> NONTERM_AtExpr 
    | 16 -> NONTERM_AtExpr 
    | 17 -> NONTERM_AtExpr 
    | 18 -> NONTERM_AtExpr 
    | 19 -> NONTERM_AtExpr 
    | 20 -> NONTERM_AtExpr 
    | 21 -> NONTERM_List 
    | 22 -> NONTERM_List 
    | 23 -> NONTERM_List 
    | 24 -> NONTERM_Const 
    | 25 -> NONTERM_Const 
    | 26 -> NONTERM_Const 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 34 
let _fsyacc_tagOfErrorTerminal = 32

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EXISTS  -> "EXISTS" 
  | LSQBR  -> "LSQBR" 
  | RSQBR  -> "RSQBR" 
  | COMMA  -> "COMMA" 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | QUOT  -> "QUOT" 
  | IMPL  -> "IMPL" 
  | FORALL  -> "FORALL" 
  | PERIOD  -> "PERIOD" 
  | OR  -> "OR" 
  | AND  -> "AND" 
  | EQ  -> "EQ" 
  | ATOM  -> "ATOM" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | MUL  -> "MUL" 
  | LT  -> "LT" 
  | LET  -> "LET" 
  | IN  -> "IN" 
  | END  -> "END" 
  | FALSE  -> "FALSE" 
  | NOT  -> "NOT" 
  | TRUE  -> "TRUE" 
  | VAL  -> "VAL" 
  | GRT  -> "GRT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTDOUBLE _ -> "CSTDOUBLE" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EXISTS  -> (null : System.Object) 
  | LSQBR  -> (null : System.Object) 
  | RSQBR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | QUOT  -> (null : System.Object) 
  | IMPL  -> (null : System.Object) 
  | FORALL  -> (null : System.Object) 
  | PERIOD  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | ATOM  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | GRT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTDOUBLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 17us; 65535us; 0us; 2us; 21us; 5us; 22us; 6us; 23us; 7us; 24us; 8us; 25us; 9us; 26us; 10us; 27us; 11us; 28us; 12us; 29us; 13us; 30us; 14us; 32us; 15us; 36us; 16us; 37us; 17us; 46us; 18us; 51us; 19us; 52us; 20us; 17us; 65535us; 0us; 4us; 21us; 4us; 22us; 4us; 23us; 4us; 24us; 4us; 25us; 4us; 26us; 4us; 27us; 4us; 28us; 4us; 29us; 4us; 30us; 4us; 32us; 4us; 36us; 4us; 37us; 4us; 46us; 4us; 51us; 4us; 52us; 4us; 2us; 65535us; 39us; 40us; 55us; 56us; 19us; 65535us; 0us; 31us; 21us; 31us; 22us; 31us; 23us; 31us; 24us; 31us; 25us; 31us; 26us; 31us; 27us; 31us; 28us; 31us; 29us; 31us; 30us; 31us; 32us; 31us; 36us; 31us; 37us; 31us; 39us; 54us; 46us; 31us; 51us; 31us; 52us; 31us; 55us; 54us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 21us; 39us; 42us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 10us; 1us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 1us; 1us; 1us; 2us; 10us; 3us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 7us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 8us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 9us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 12us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 14us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 16us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 16us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 18us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 19us; 10us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 20us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 2us; 22us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 15us; 17us; 19us; 30us; 41us; 52us; 63us; 74us; 85us; 96us; 107us; 118us; 129us; 140us; 151us; 162us; 173us; 184us; 195us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 213us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 233us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 259us; 261us; 264us; 266us; 268us; 270us; 272us; |]
let _fsyacc_action_rows = 60
let _fsyacc_actionTableElements = [|11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 0us; 49152us; 10us; 32768us; 4us; 3us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 0us; 16385us; 0us; 16386us; 4us; 16387us; 12us; 22us; 15us; 28us; 16us; 29us; 17us; 30us; 3us; 16388us; 15us; 28us; 16us; 29us; 17us; 30us; 0us; 16389us; 9us; 16390us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 4us; 16391us; 12us; 22us; 15us; 28us; 16us; 29us; 17us; 30us; 4us; 16392us; 12us; 22us; 15us; 28us; 16us; 29us; 17us; 30us; 8us; 16393us; 8us; 27us; 11us; 21us; 12us; 22us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 1us; 16394us; 17us; 30us; 1us; 16395us; 17us; 30us; 0us; 16396us; 0us; 16398us; 10us; 32768us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 20us; 37us; 26us; 25us; 10us; 32768us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 21us; 38us; 26us; 25us; 9us; 16402us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 9us; 16403us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 10us; 32768us; 6us; 53us; 8us; 27us; 11us; 21us; 12us; 22us; 13us; 24us; 15us; 28us; 16us; 29us; 17us; 30us; 18us; 26us; 26us; 25us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 0us; 16397us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 0us; 16399us; 1us; 32768us; 28us; 35us; 1us; 32768us; 13us; 36us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 0us; 16400us; 3us; 16405us; 27us; 59us; 29us; 58us; 31us; 57us; 1us; 32768us; 2us; 41us; 0us; 16401us; 1us; 32768us; 28us; 43us; 1us; 32768us; 20us; 44us; 1us; 32768us; 28us; 45us; 1us; 32768us; 10us; 46us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 1us; 32768us; 28us; 48us; 1us; 32768us; 20us; 49us; 1us; 32768us; 28us; 50us; 1us; 32768us; 10us; 51us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 11us; 32768us; 0us; 47us; 1us; 39us; 5us; 52us; 9us; 42us; 14us; 32us; 19us; 34us; 23us; 23us; 27us; 59us; 28us; 33us; 29us; 58us; 31us; 57us; 0us; 16404us; 1us; 16406us; 3us; 55us; 3us; 16405us; 27us; 59us; 29us; 58us; 31us; 57us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 0us; 16410us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 12us; 13us; 24us; 25us; 26us; 31us; 35us; 36us; 46us; 51us; 56us; 65us; 67us; 69us; 70us; 71us; 82us; 93us; 103us; 113us; 124us; 136us; 148us; 160us; 172us; 184us; 196us; 208us; 220us; 232us; 244us; 245us; 257us; 258us; 260us; 262us; 274us; 286us; 287us; 291us; 293us; 294us; 296us; 298us; 300us; 302us; 314us; 316us; 318us; 320us; 322us; 334us; 346us; 347us; 349us; 353us; 354us; 355us; 356us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 7us; 3us; 6us; 6us; 3us; 0us; 1us; 3us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 5us; 5us; 5us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16386us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16399us; 65535us; 65535us; 65535us; 65535us; 16400us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16404us; 65535us; 65535us; 16407us; 16408us; 16409us; 16410us; |]
let _fsyacc_reductions ()  =    [| 
# 286 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Dk.Nqn.Fol.expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startMain));
# 295 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 36 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           _1                   
                   )
# 36 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : Dk.Nqn.Fol.expr));
# 306 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AtExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           _1                   
                   )
# 41 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 317 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("∨", _1, _3)  
                   )
# 43 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 329 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("∧", _1, _3)  
                   )
# 45 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 341 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Monadic("¬", _2)     
                   )
# 47 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 352 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("=", _1, _3)  
                   )
# 49 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 364 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic(">", _1, _3)  
                   )
# 51 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 376 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("<", _1, _3)  
                   )
# 53 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 388 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("→", _1, _3)  
                   )
# 55 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 400 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("+", _1, _3)  
                   )
# 57 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 412 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("-", _1, _3)  
                   )
# 59 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 424 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Dyadic("*", _1, _3)  
                   )
# 61 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Expr));
# 436 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           _1                   
                   )
# 67 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 447 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Atom(_2)             
                   )
# 69 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 458 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Var _1               
                   )
# 71 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 469 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Let(_2, _4, _6)      
                   )
# 73 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 482 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'List)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           CList(_2)            
                   )
# 75 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 493 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Quant("∧",_2,_4,_6)  
                   )
# 77 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 506 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           Quant("∨",_2,_4,_6)  
                   )
# 79 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 519 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           _2                   
                   )
# 81 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'AtExpr));
# 530 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           []                   
                   )
# 86 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'List));
# 540 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           [_1]                 
                   )
# 88 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'List));
# 551 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'List)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           _1 :: _3             
                   )
# 90 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'List));
# 563 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           CInt(_1)             
                   )
# 97 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Const));
# 574 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           CBool(_1)            
                   )
# 99 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Const));
# 585 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                           CString(_1)          
                   )
# 101 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fsy"
                 : 'Const));
|]
# 597 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/Rivano/src/app/FolPar.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 35;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Dk.Nqn.Fol.expr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
