%{
 (* File Fun/FunPar.fsy 
    Parser for a small First Order Logic Language;
    osto@itu.dk * 2016-02-06
  *)

 open Fol;
%}
%token <int> CSTINT
%token <string> CSTATOM
%token <bool> CSTBOOL

%token FALSE NOT TRUE
%token OR AND
%token LPAR RPAR 
%token EOF
             
%left OR AND            

%nonassoc NOT           

%start Main
%type <Fol.Expr> Main 

%%

Main:
  Expr EOF                              { $1                   }
;

Expr:
  AtExpr                                {$1                    }   
  | Expr OR  Expr                       { Dyadic("|",$1, $3)   }
  | Expr AND Expr                       { Dyadic("&",$1, $3)   }
;

AtExpr:
  Const                                 {$1                    } 
  |LPAR Expr RPAR                       {$2                    }

Const:
  CSTATOM                               { Atom($1)             }
  | CSTINT                              { CInt($1)             }
  | CSTBOOL                             { CBool($1)            }
;
   


