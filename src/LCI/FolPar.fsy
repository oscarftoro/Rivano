%{
 (* File Fun/FunPar.fsy 
    Parser for a tiny First Order Logic Language;
    osto@itu.dk * 2016-02-06
  *)

 open LCI.Fol;
%}
%token <int> CSTINT 

%token <bool> CSTBOOL 
%token <string> CSTSTRING NAME 

%token LET IN END FALSE NOT TRUE VAL GRT
%token OR AND EQ ATOM PLUS MINUS MUL LT
%token LPAR RPAR QUOT IMPL FORALL PERIOD
%token EXISTS LSQBR RSQBR COMMA EOF

%right EQ
%right IMPL
%left OR 
%left AND  
%left PLUS  MINUS
%left MUL
%nonassoc NOT GRT LT      

%start Main
%type <LCI.Fol.expr> Main 

%%

Main:
  Expr EOF                        
    { $1                   }
;

Expr:
  AtExpr                                
    { $1                   }
  | Expr OR  Expr                       
    { Dyadic("∨", $1, $3)  }
  | Expr AND Expr                       
    { Dyadic("∧", $1, $3)  }
  | NOT Expr                            
    { Monadic("¬", $2)     }
  | Expr EQ Expr
    { Dyadic("=", $1, $3)  }  
  | Expr GRT Expr 
    { Dyadic(">", $1, $3)  }  
  | Expr LT Expr 
    { Dyadic("<", $1, $3)  }    
  | Expr IMPL Expr
    { Dyadic("→", $1, $3)  }  
  | Expr PLUS Expr 
    { Dyadic("+", $1, $3)  }  
  | Expr MINUS Expr 
    { Dyadic("-", $1, $3)  }  
  | Expr MUL Expr 
    { Dyadic("*", $1, $3)  }    

;

AtExpr:
  Const                                 
    { $1                   }
  | ATOM Expr                               
    { Atom($2)             }  
  | NAME                                
    { Var $1               }
  | LET NAME EQ Expr IN Expr END        
    { Let($2, $4, $6)      }
  | LSQBR List RSQBR  
    { CList($2)            }
  | FORALL NAME IN NAME PERIOD Expr 
    { UniQt("∧",$2,$4,$6)  }    
  | EXISTS NAME IN NAME PERIOD Expr
    { UniQt("∨",$2,$4,$6)  }  
  | LPAR Expr RPAR                      
    { $2                   }
;

List:
   /*empty */ 
    { []                   }
  | Const 
    { [$1]                 }
  | Const COMMA List
    { $1 :: $3             }   
  
  ;

Const:
 
  | CSTINT                              
    { CInt($1)             }
  | CSTBOOL                             
    { CBool($1)            }  
  | CSTSTRING
    { CString($1)          }  
;
   


