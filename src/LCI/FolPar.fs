// Implementation file for parser generated by fsyacc
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"

 (* File Fun/FunPar.fsy 
    Parser for a small First Order Logic Language;
    osto@itu.dk * 2016-02-06
  *)

 open LCI.Fol;

# 14 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EXISTS
  | LSQBR
  | RSQBR
  | COMMA
  | EOF
  | LPAR
  | RPAR
  | QUOT
  | IMPL
  | FORALL
  | PERIOD
  | OR
  | AND
  | EQ
  | ATOM
  | PLUS
  | MINUS
  | MUL
  | LET
  | IN
  | END
  | FALSE
  | NOT
  | TRUE
  | VAL
  | GRT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTBOOL of (bool)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EXISTS
    | TOKEN_LSQBR
    | TOKEN_RSQBR
    | TOKEN_COMMA
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_QUOT
    | TOKEN_IMPL
    | TOKEN_FORALL
    | TOKEN_PERIOD
    | TOKEN_OR
    | TOKEN_AND
    | TOKEN_EQ
    | TOKEN_ATOM
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_MUL
    | TOKEN_LET
    | TOKEN_IN
    | TOKEN_END
    | TOKEN_FALSE
    | TOKEN_NOT
    | TOKEN_TRUE
    | TOKEN_VAL
    | TOKEN_GRT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTBOOL
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Expr
    | NONTERM_AtExpr
    | NONTERM_List
    | NONTERM_Const

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EXISTS  -> 0 
  | LSQBR  -> 1 
  | RSQBR  -> 2 
  | COMMA  -> 3 
  | EOF  -> 4 
  | LPAR  -> 5 
  | RPAR  -> 6 
  | QUOT  -> 7 
  | IMPL  -> 8 
  | FORALL  -> 9 
  | PERIOD  -> 10 
  | OR  -> 11 
  | AND  -> 12 
  | EQ  -> 13 
  | ATOM  -> 14 
  | PLUS  -> 15 
  | MINUS  -> 16 
  | MUL  -> 17 
  | LET  -> 18 
  | IN  -> 19 
  | END  -> 20 
  | FALSE  -> 21 
  | NOT  -> 22 
  | TRUE  -> 23 
  | VAL  -> 24 
  | GRT  -> 25 
  | CSTSTRING _ -> 26 
  | NAME _ -> 27 
  | CSTBOOL _ -> 28 
  | CSTINT _ -> 29 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EXISTS 
  | 1 -> TOKEN_LSQBR 
  | 2 -> TOKEN_RSQBR 
  | 3 -> TOKEN_COMMA 
  | 4 -> TOKEN_EOF 
  | 5 -> TOKEN_LPAR 
  | 6 -> TOKEN_RPAR 
  | 7 -> TOKEN_QUOT 
  | 8 -> TOKEN_IMPL 
  | 9 -> TOKEN_FORALL 
  | 10 -> TOKEN_PERIOD 
  | 11 -> TOKEN_OR 
  | 12 -> TOKEN_AND 
  | 13 -> TOKEN_EQ 
  | 14 -> TOKEN_ATOM 
  | 15 -> TOKEN_PLUS 
  | 16 -> TOKEN_MINUS 
  | 17 -> TOKEN_MUL 
  | 18 -> TOKEN_LET 
  | 19 -> TOKEN_IN 
  | 20 -> TOKEN_END 
  | 21 -> TOKEN_FALSE 
  | 22 -> TOKEN_NOT 
  | 23 -> TOKEN_TRUE 
  | 24 -> TOKEN_VAL 
  | 25 -> TOKEN_GRT 
  | 26 -> TOKEN_CSTSTRING 
  | 27 -> TOKEN_NAME 
  | 28 -> TOKEN_CSTBOOL 
  | 29 -> TOKEN_CSTINT 
  | 32 -> TOKEN_end_of_input
  | 30 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Expr 
    | 3 -> NONTERM_Expr 
    | 4 -> NONTERM_Expr 
    | 5 -> NONTERM_Expr 
    | 6 -> NONTERM_Expr 
    | 7 -> NONTERM_Expr 
    | 8 -> NONTERM_Expr 
    | 9 -> NONTERM_Expr 
    | 10 -> NONTERM_Expr 
    | 11 -> NONTERM_Expr 
    | 12 -> NONTERM_AtExpr 
    | 13 -> NONTERM_AtExpr 
    | 14 -> NONTERM_AtExpr 
    | 15 -> NONTERM_AtExpr 
    | 16 -> NONTERM_AtExpr 
    | 17 -> NONTERM_AtExpr 
    | 18 -> NONTERM_AtExpr 
    | 19 -> NONTERM_AtExpr 
    | 20 -> NONTERM_List 
    | 21 -> NONTERM_List 
    | 22 -> NONTERM_List 
    | 23 -> NONTERM_Const 
    | 24 -> NONTERM_Const 
    | 25 -> NONTERM_Const 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 32 
let _fsyacc_tagOfErrorTerminal = 30

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EXISTS  -> "EXISTS" 
  | LSQBR  -> "LSQBR" 
  | RSQBR  -> "RSQBR" 
  | COMMA  -> "COMMA" 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | QUOT  -> "QUOT" 
  | IMPL  -> "IMPL" 
  | FORALL  -> "FORALL" 
  | PERIOD  -> "PERIOD" 
  | OR  -> "OR" 
  | AND  -> "AND" 
  | EQ  -> "EQ" 
  | ATOM  -> "ATOM" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | MUL  -> "MUL" 
  | LET  -> "LET" 
  | IN  -> "IN" 
  | END  -> "END" 
  | FALSE  -> "FALSE" 
  | NOT  -> "NOT" 
  | TRUE  -> "TRUE" 
  | VAL  -> "VAL" 
  | GRT  -> "GRT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EXISTS  -> (null : System.Object) 
  | LSQBR  -> (null : System.Object) 
  | RSQBR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | QUOT  -> (null : System.Object) 
  | IMPL  -> (null : System.Object) 
  | FORALL  -> (null : System.Object) 
  | PERIOD  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | ATOM  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | GRT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 16us; 65535us; 0us; 2us; 20us; 5us; 21us; 6us; 22us; 7us; 23us; 8us; 24us; 9us; 25us; 10us; 26us; 11us; 27us; 12us; 28us; 13us; 30us; 14us; 34us; 15us; 35us; 16us; 44us; 17us; 47us; 18us; 48us; 19us; 16us; 65535us; 0us; 4us; 20us; 4us; 21us; 4us; 22us; 4us; 23us; 4us; 24us; 4us; 25us; 4us; 26us; 4us; 27us; 4us; 28us; 4us; 30us; 4us; 34us; 4us; 35us; 4us; 44us; 4us; 47us; 4us; 48us; 4us; 2us; 65535us; 37us; 38us; 51us; 52us; 18us; 65535us; 0us; 29us; 20us; 29us; 21us; 29us; 22us; 29us; 23us; 29us; 24us; 29us; 25us; 29us; 26us; 29us; 27us; 29us; 28us; 29us; 30us; 29us; 34us; 29us; 35us; 29us; 37us; 50us; 44us; 29us; 47us; 29us; 48us; 29us; 51us; 50us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 20us; 37us; 40us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 9us; 1us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 1us; 1us; 1us; 2us; 9us; 3us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 6us; 6us; 7us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 6us; 7us; 7us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 6us; 7us; 8us; 8us; 9us; 10us; 11us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 9us; 10us; 11us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 13us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 15us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 15us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 17us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 18us; 9us; 3us; 4us; 6us; 7us; 8us; 9us; 10us; 11us; 19us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 1us; 19us; 2us; 21us; 22us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 14us; 16us; 18us; 28us; 38us; 48us; 58us; 68us; 78us; 88us; 98us; 108us; 118us; 128us; 138us; 148us; 158us; 168us; 170us; 172us; 174us; 176us; 178us; 180us; 182us; 184us; 186us; 188us; 190us; 192us; 194us; 196us; 198us; 200us; 202us; 204us; 206us; 208us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 231us; 233us; 235us; 237us; 239us; |]
let _fsyacc_action_rows = 56
let _fsyacc_actionTableElements = [|11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 0us; 49152us; 9us; 32768us; 4us; 3us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 0us; 16385us; 0us; 16386us; 5us; 16387us; 12us; 21us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 4us; 16388us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 1us; 16389us; 25us; 24us; 8us; 16390us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 1us; 16391us; 25us; 24us; 7us; 16392us; 8us; 25us; 11us; 20us; 12us; 21us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 2us; 16393us; 17us; 28us; 25us; 24us; 2us; 16394us; 17us; 28us; 25us; 24us; 1us; 16395us; 25us; 24us; 8us; 16397us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 9us; 32768us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 19us; 35us; 25us; 24us; 9us; 32768us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 20us; 36us; 25us; 24us; 8us; 16401us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 8us; 16402us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 9us; 32768us; 6us; 49us; 8us; 25us; 11us; 20us; 12us; 21us; 13us; 23us; 15us; 26us; 16us; 27us; 17us; 28us; 25us; 24us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 0us; 16396us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 0us; 16398us; 1us; 32768us; 27us; 33us; 1us; 32768us; 13us; 34us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 0us; 16399us; 3us; 16404us; 26us; 55us; 28us; 54us; 29us; 53us; 1us; 32768us; 2us; 39us; 0us; 16400us; 1us; 32768us; 27us; 41us; 1us; 32768us; 19us; 42us; 1us; 32768us; 27us; 43us; 1us; 32768us; 10us; 44us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 1us; 32768us; 27us; 46us; 1us; 32768us; 10us; 47us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 11us; 32768us; 0us; 45us; 1us; 37us; 5us; 48us; 9us; 40us; 14us; 30us; 18us; 32us; 22us; 22us; 26us; 55us; 27us; 31us; 28us; 54us; 29us; 53us; 0us; 16403us; 1us; 16405us; 3us; 51us; 3us; 16404us; 26us; 55us; 28us; 54us; 29us; 53us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 0us; 16409us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 12us; 13us; 23us; 24us; 25us; 31us; 36us; 38us; 47us; 49us; 57us; 60us; 63us; 65us; 74us; 84us; 94us; 103us; 112us; 122us; 134us; 146us; 158us; 170us; 182us; 194us; 206us; 218us; 230us; 231us; 243us; 244us; 246us; 248us; 260us; 272us; 273us; 277us; 279us; 280us; 282us; 284us; 286us; 288us; 300us; 302us; 304us; 316us; 328us; 329us; 331us; 335us; 336us; 337us; 338us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 7us; 3us; 6us; 4us; 3us; 0us; 1us; 3us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 5us; 5us; 5us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 16386us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 16398us; 65535us; 65535us; 65535us; 65535us; 16399us; 65535us; 65535us; 16400us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16403us; 65535us; 65535us; 16406us; 16407us; 16408us; 16409us; |]
let _fsyacc_reductions ()  =    [| 
# 273 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LCI.Fol.expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startMain));
# 282 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 34 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           _1                   
                   )
# 34 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : LCI.Fol.expr));
# 293 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'AtExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           _1                   
                   )
# 39 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 304 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("∨", _1, _3)  
                   )
# 41 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 316 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("∧", _1, _3)  
                   )
# 43 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 328 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Monadic("¬", _2)     
                   )
# 45 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 339 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("=", _1, _3)  
                   )
# 47 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 351 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic(">", _1, _3)  
                   )
# 49 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 363 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("→", _1, _3)  
                   )
# 51 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 375 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("+", _1, _3)  
                   )
# 53 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 387 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("-", _1, _3)  
                   )
# 55 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 399 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Dyadic("*", _1, _3)  
                   )
# 57 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Expr));
# 411 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           _1                   
                   )
# 63 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 422 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Atom(_2)             
                   )
# 65 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 433 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Var _1               
                   )
# 67 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 444 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Let(_2, _4, _6)      
                   )
# 69 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 457 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'List)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           CList(_2)            
                   )
# 71 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 468 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           ForAll(_2,_4,_6)     
                   )
# 73 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 481 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           Exists(_2, _4)       
                   )
# 75 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 493 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           _2                   
                   )
# 77 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'AtExpr));
# 504 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           []                   
                   )
# 82 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'List));
# 514 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           [_1]                 
                   )
# 84 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'List));
# 525 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Const)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'List)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           _1 :: _3             
                   )
# 86 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'List));
# 537 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           CInt(_1)             
                   )
# 93 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Const));
# 548 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           CBool(_1)            
                   )
# 95 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Const));
# 559 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                           CString(_1)          
                   )
# 97 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fsy"
                 : 'Const));
|]
# 571 "/home/oscarftoro/Documentos/3.semester/Development/FSharp/Rivano/src/LCI/FolPar.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 33;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : LCI.Fol.expr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
